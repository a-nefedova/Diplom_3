{"name": "Проверяем, что залогиненный пользователь может оформить заказ.", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <test_main.TestMain object at 0x7f97f1ae60e0>, driver = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"33a3d47c-f450-4e43-a26c-a2bb9841e56d\")>\nauthorized_user = <pages.account_page.AccountPage object at 0x7f97f19d1750>\n\n    @allure.title('Проверяем, что залогиненный пользователь может оформить заказ.')\n    def test_auth_user_create_order(self, driver, authorized_user):\n        authorized_user.go_to_page(URLs.HOMEPAGE)\n    \n        burger = authorized_user.find_visible_element(LocatorsMain.BURGER)\n        ingredient = authorized_user.find_visible_element(LocatorsMain.INGREDIENT)\n        ActionChains(driver).drag_and_drop(ingredient, burger).perform()\n    \n        authorized_user.click_order_button()\n    \n>       order_number = authorized_user.get_order_number(LocatorsMain.ORDER_NUMBER)\n\ntests/test_main.py:75: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/account_page.py:28: in get_order_number\n    WebDriverWait(self.driver, 10).until_not(EC.text_to_be_present_in_element(locator, '9999'))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"33a3d47c-f450-4e43-a26c-a2bb9841e56d\")>, method = <function text_to_be_present_in_element.<locals>._predicate at 0x7f97f1a47910>, message = ''\n\n    def until_not(self, method: Callable[[WebDriver], T], message: str = \"\") -> Union[T, Literal[True]]:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value evaluates to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`, or\n                  ``True`` if `method` has raised one of the ignored exceptions\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if not value:\n                    return value\n            except self._ignored_exceptions:\n                return True\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n../../../.local/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:124: TimeoutException"}, "steps": [{"name": "Переходим на страницу", "status": "passed", "parameters": [{"name": "url", "value": "'https://stellarburgers.nomoreparties.site'"}], "start": 1710187874555, "stop": 1710187874806}], "parameters": [{"name": "driver", "value": "'firefox'"}], "start": 1710187874555, "stop": 1710187886612, "uuid": "c1c15518-fba4-483d-9c8c-470019c86b93", "historyId": "9e27964032eb874f993bb1c8dcd46dd7", "testCaseId": "b37c5ac586adfa9ff39de03a96f950d6", "fullName": "tests.test_main.TestMain#test_auth_user_create_order", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_main"}, {"name": "subSuite", "value": "TestMain"}, {"name": "host", "value": "nif-MS-7680"}, {"name": "thread", "value": "51095-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_main"}]}